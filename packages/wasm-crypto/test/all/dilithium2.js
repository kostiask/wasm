// Copyright 2019-2022 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

const crypto = require('crypto');
const { assert, hexToU8a, stringToU8a, u8aToHex } = require('@polkadot/util');

function extractKeys (pair) {
  return [pair, pair.slice(2528), pair.slice(0, 3840)];
}

function randomPair (wasm) {
  return extractKeys(wasm.dilithium2KeypairFromSeed(crypto.randomBytes(32)));
}

function dilithium2PairFromSeed (wasm) {
  const [pair, pk, sk] = extractKeys(wasm.dilithium2KeypairFromSeed(stringToU8a('12345678901234567890123456789012')));

  console.log('\tSEC', u8aToHex(sk));
  console.log('\tPUB', u8aToHex(pk));

  assert(u8aToHex(pair) === '0x313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132313233343536373839303132333435363738393031323334353637383930313231323334353637383930313233343536373839303132333435363738393031323132333435363738393031323334353637383930313233343536373839303132', 'ERROR: pairFromSeed() does not match');
  assert(u8aToHex(pk) === "0xublic key');
}

function dilithium2SignAndVerify (wasm) {
  const [, pk, sk] = randomPair(wasm);
  const signature = wasm.dilithium2Sign(pk, sk.slice(0,32), stringToU8a('this is a message'));
  const isValid = wasm.dilithium2Verify(signature, stringToU8a('this is a message'), pk);

  console.log('\tSIG', u8aToHex(signature));
  console.log('\tRES', isValid);

  assert(isValid, 'ERROR: Unable to verify signature');
}

function dilithium2VerifyExisting (wasm) {
  const isValid = wasm.dilithium2Verify(hexToU8a('0x2e332f6e22d2edc5c3a9fc240450fb2a7f75254abac8971599ce216e156e1c0306d98ab5dbbcee375b31ffa4282472354b36ae4ed4e52a99cae98249c25381c61efb033c2f36ad2f1e84feb3c157d2e7281140cd6ac81d4b7809533b36e1a18d188ed1170b02707ec0424555ea31355c5435d923e920ddb87d7fc4b0b9f2c79dca32432e5dc8e3fecbf4de8a8cc363e408f57da20fcaa94fb4f736061fc1d97031f91deafa2048368d966cf63b220492243896abcc3c8c71c77405013872f94c1a59dbc8190e8174ac4c9107e6a7f2ac7a94a637a144581fc9c79b10ffc86bdb2e6d90c562839c2bd4fbcd36f01b82ad7af3b4fd2d432abc01c15e8e7e93bd1862e516dd78f2d7d3687472c117b5c9bfcdaf09327b4645191dd81a3cddfc356b1b455fa4d7852266a153431fa21e9e914a772392dce7cfd9f6a576aaa05b1a8a6d4e096182ccd19cb6b35b6cdbfdbf2d5cc4d213c85e689f9768fbebf6e567985d0188de700b44847f89a7f0cf6850a2eb5228ed4f205b47eec18460a8a71d756f691dc5d0ca7159df47361a1ab9b05605c4f1ba7166e1f4b5be6eb0b7bdd98bbdf605a02320f7cd0d05862ebf6849375a6cf07bd10587e709f6b0ec91a9782f40557710322c7a3d73e1cc4a9ce3f4554f5b5df9d43112acf3574bc41e2ff86053d08f8978c73eaaf9ef34e3e96044691594e6d2d4d3fc491da52d80fea2ea8f409609725c146a4cea1baf5032d85f417315991ffe36d211d5489107c9ccf8b45a8a756ccad8d07412e569d2ee2ccb092fa6aea6484edc024ab10b63086bf22c8a6455901edf1b9631b5813fae3b79412b13f0416e85cd3a5c7a8ce348554d4a0fe3b5ad1a8e896d9dcea25847b5e4a457e6707c660ee19bec2ed93c530e2309a204f0044e8e99a6157dbc9627a23fc64f510b77c77de890a710c37719f3db6cb7c4b8056edf260d62a01c7709fe5c89770538061608313adb3a47119165cb2d3b146038461b252da125b4967510b8d1e7517b178779f010ec9bc55afe660261989afe9170050fb81cc75ec15bfb091ec16c94652a3e3d0ec6fdc75d7bbac804929d0c4318638cfc007a38a91118febf376483700a997f0493245911aa925d3421700d947ebff26de508e2008fb6443443db56bb2940d354fd3091dd6db3a91c22d3480c85fd37ff7b87cc88f3ecc23dafc1651141e3a95f5b14a20cba88d4547877c2ca841fa2cf3e72fbf166e2f99d78cd34a6e13cb21e2453a6903ce0a69a3b3580d27260ffbae67c141babe5f89849e17a91a945423d8b6ccd038a7a84dbfb5ffe4a4dadbf9d11a57559cb005375a368b18852807420c095ccd59ccc43d9bcea0a5c1ce3b9edf87764fab471b4520a472ff066b6898d6adf430324d9a3b0324e8d55bd1d9a500c2724e58a76c573421ef5368e93951117ccdee64f82219235ae6d7faf28c7d570fc3b9c4594c0ec5ed5c73bba1c7d39a0fff65b2a152a8e2c992999944c942e4c02dd49e5057c545079f83ee58a0ba7d509d3c28c4b0242e230adc8ef376ad7753d672bc53ec0678bdd31bf5184512d55d3a9e5324ce2270e5adc8d1fe2d44e2c56cc32f28f13352439bd8113e69c4921a258eeddfbfcfc4cf8a3de97c69ab0ae3421ba1dfec0b867bf3ab083a5bc391f4f89d5123268586966b37a957622563a47d8b6225046abfdf9b2dd27404703ce33159b46d7210585f5a2f41ac756c8057c6969fb472e49b6c8b15b95200a91d6f35127197462262752a87da1221e3928e3895b71b1ed84f481cd6468ff36935f5500294e0ebbf02c69ebad208c63e94ab42a65a1278854150fcb11fe8030bcff10d8e43c57fbab5accd70fa3ea95217730909cc94130c2746291b11340624ab151c458f93771ea227bc660379c67277f7fe761fd5fa49c192ccf23d6b9c73a6e305ad415977d883cd2a2be6114fb89e576b671979d6ba115363fd8c89173a08040cf8f6be878e30feae7cf8a98162b99cb1f8ec69c3eb95e6201a6b2419733b3ae3d0aff5676ab8aa488174b2e48c6416a22d37dce53db59318e67bf4949ddcb933bb3c1548fb11ea0938a5a39f2b76b414f4639050f92629674193d518df207f4843b33e3ec8e4813466914dc4cdea2f80f526b701c2dfdef67606099a15b4cadca0cb1bbdf5fca3721b8acbe1bccbc3340402f83cdbf33edf28cec6d4ff030a51967c57da304f9b275f3530382ccc43f08fc00cd20adab9cbe1b735dc5e89962088f8a58629cb89083558d7b66ea867298e7e842b75735ac150b550114ba3184d064f76c8b77bb7cf1b7a5dc7ef7878c879d0489986067752803d1ba4a3324eaf93add3ec67237bbd511d3a0d377875e5b443ae25a5b1b9cd6899adcb20df1c91ea47732f8167112219867a439dbe3719e1e442075c5a496b3292a32967ce6552ca18936f6e06749e80b95274aa0bbb682c87f013bd8cb3af57dcef659a6a28b4500b530b774109805825ff3969418f2791a79175b797465b73c3434221d6eed82e5d021de0e6532bfecc87162b960658224a4f1db6105b1064d8d1c25cf5ec815150fe7a09f95bc341a6852091789832e34ed6d8db439e36e599124933ce803cee8dffc94677ca6cc1345a144dae5d680b0a903e25aab9e29901a32a088c44759b9364e6a25fbf4868dd989f0545ba93e9ba1532675fb9f1e0fa398ac5ee22833537a224fda66b35e9a0cf3ff678bbf4267ef67a451bf48b7a9cf949c28441b0ff7558c7f058aea02b1ee1446cde85140f2cd92bc854933d62c267eff5ca4d1219112da146ac898aef48f65e79c15fc2ccf6f69bc64c57378fd22a61635c767bf9b7fc32c97d9c7e9c7a4ab68668d68b353cae28d9470ca631b76eb4aebe330a0cf065c6eda4b0fe89002dacd8aa272feb10747c779b9fc4f2ae78d720be19961286890d53ccb9d8f0fc036f07cc6e2ffb07e49b3a721af4463c91af151e13bd6ef592ebe47c010b99a960504e0f3e73e8c774dd74bc53fc344e38b1e709de69597e4de26ca5060eb129d6f2c7b342705586981b5060345833d4475ade749e17c95bd22b376841eb0e630b7eca7d96ad89cd3dbe7c274d9687fa0bcf178e62a8b28d03ff5da614785f686da0ca5274713a9610f09afd616d443c384ccae7ef731f1b0f52c9ebfb3fc393940b4ed2d37b68d39fc68124b766b5e9866915bcf34193b1777ee3a67cf7312e9352c427691e59bfc606fd2dc44a595a5364c3f302982590185754d9adb12aa9ed03d6d88eb93e7b462c24724db585144cb625d478d6bbd3a56bdba7e8bec53f13ab1ec062bada2f9bfa76bf5434eb84bd50a6ea9370a481ed4ceb539119158fa5a20ab57720fec2cd593f1582aeff6f66cb1d6851ee20a91c2352b42c385344466302af12f22a3a2a4f6e9072b9acf'), stringToU8a('this is a message'), hexToU8a('0x

  console.log('\tRES', isValid);

  assert(isValid, 'ERROR: Unable to verify signature');
}

function dilithium2Benchmark (wasm) {
  const MESSAGE = stringToU8a('this is a message');

  for (let i = 0; i < 256; i++) {
    const [, pk, sk] = randomPair(wasm);

    assert(wasm.dilithium2Verify(wasm.dilithium2Sign(pk, sk.slice(0,32), MESSAGE), MESSAGE, pk), 'ERROR: Unable to verify signature');
  }
}

module.exports = {
  dilithium2Benchmark,
  dilithium2PairFromSeed,
  dilithium2SignAndVerify,
  dilithium2VerifyExisting
};
